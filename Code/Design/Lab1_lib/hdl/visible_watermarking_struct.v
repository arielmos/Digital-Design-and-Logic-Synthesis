//
// Module Lab1_lib.Visible_Watermarking.struct
//
// Created:
//          by - amitnag.UNKNOWN (SHOHAM)
//          at - 18:43:30 11/29/2020
//
// Generated by Mentor Graphics' HDL Designer(TM) 2019.2 (Build 5)
//

`resetall
`timescale 1ns/10ps
module Visible_Watermarking #(
   // synopsys template
   parameter Amba_Addr_Depth = 20,  //Part of the Amba standard at Moodle site; Range - 20,24,32
   parameter Amba_Word       = 16,  //Part of the Amba standard at Moodle site; Range - 16,24,32
   parameter Data_Depth      = 8    //Bit depth of the pixel; Range - 8,16
)
( 
   // Port Declarations
   input   wire    [Amba_Addr_Depth-1:0]  PADDR,       // APB Address Bus
   input   wire                           PENABLE,     // APB Bus Enable/clk
   input   wire                           PSEL,        // APB Bus Select
   input   wire    [Amba_Word-1:0]        PWDATA,      // APB Write Data Bus
   input   wire                           PWRITE,      // APB Bus Write
   input   wire                           clk,         //system clock
   input   wire                           rst,         //  Reset active low
   output  reg                            Image_Done,  //State indicator (Output)
   output  reg     [Data_Depth-1:0]       Pixel_Data,  //Modified pixel (Output)
   output  reg                            new_pixel    //New pixel indicator
);


// Internal Declarations


// Local declarations

// Internal signal declarations
wire                           Block_Done;    //Finished watermark insertion of block
wire  [(Data_Depth*72*72)-1:0] Im_block;      //[(72*72)-1:0],  // max size of block is 72*72 pixels and size of pixel is DATA_DEPTH
wire                           Image_Done1;   //State indicator - Control and Registers Image done
wire  [19:0]                   M2;            //M*M number of pixel in a block
wire                           Ready;         //Block_To_Pixel is ready to recive new block
wire  [(Data_Depth*72*72)-1:0] W_block;       //[(72*72)-1:0],  // max size of block is 72*72 pixels and size of pixel is DATA_DEPTH
wire  [(Data_Depth*72*72)-1:0] block_out;     //[(72*72)-1:0],  // Max size of block is 72*72 pixels and size of pixel is DATA_DEPTH
wire                           dout;          // APB Bus Enable/clk
wire                           ena_out;       //Enable for start watermark insertion of block
wire  [(10*9)-1:0]             params;        //[9:0]//9 params size of 9 bits


// Instances 
Block_To_Pixel U_1( 
   .clk        (clk), 
   .rst        (rst), 
   .M2         (M2), 
   .block_in   (block_out), 
   .block_done (Block_Done), 
   .Pixel_Data (Pixel_Data), 
   .Ready      (Ready), 
   .new_pixel  (new_pixel), 
   .last_Block (Image_Done1), 
   .Image_Done (Image_Done)
); 

Control_And_Registers U_0( 
   .clk        (clk), 
   .rst        (rst), 
   .ena_in     (dout), 
   .Address    (PADDR), 
   .data_in    (PWDATA), 
   .ena_out    (ena_out), 
   .Image_Done (Image_Done1), 
   .Block_Done (Block_Done), 
   .params     (params), 
   .Im_block   (Im_block), 
   .W_block    (W_block)
); 

Equation_Implementation U_2( 
   .Im_block   (Im_block), 
   .Ready      (Ready), 
   .W_block    (W_block), 
   .clk        (clk), 
   .ena_in     (ena_out), 
   .params     (params), 
   .rst        (rst), 
   .block_done (Block_Done), 
   .block_out  (block_out), 
   .M2         (M2)
); 


// ModuleWare code(v1.12) for instance 'AMBA_Enable_logic' of 'and'
assign dout = PENABLE & PSEL & PWRITE;

endmodule // Visible_Watermarking

